#ifdef __OBJC__
#import <UIKit/UIKit.h>
#else
#ifndef FOUNDATION_EXPORT
#if defined(__cplusplus)
#define FOUNDATION_EXPORT extern "C"
#else
#define FOUNDATION_EXPORT extern
#endif
#endif
#endif

#import "align/align.hpp"
#import "align/detail/address.hpp"
#import "align/detail/align.hpp"
#import "align/detail/align_cxx11.hpp"
#import "align/detail/is_alignment.hpp"
#import "aligned_storage.hpp"
#import "any.hpp"
#import "assert.hpp"
#import "bind.hpp"
#import "bind/arg.hpp"
#import "bind/bind.hpp"
#import "bind/bind_cc.hpp"
#import "bind/bind_mf2_cc.hpp"
#import "bind/bind_mf_cc.hpp"
#import "bind/bind_template.hpp"
#import "bind/mem_fn.hpp"
#import "bind/mem_fn_cc.hpp"
#import "bind/mem_fn_template.hpp"
#import "bind/mem_fn_vw.hpp"
#import "bind/placeholders.hpp"
#import "bind/storage.hpp"
#import "blank.hpp"
#import "blank_fwd.hpp"
#import "call_traits.hpp"
#import "checked_delete.hpp"
#import "config.hpp"
#import "config/abi/borland_prefix.hpp"
#import "config/abi/borland_suffix.hpp"
#import "config/abi/msvc_prefix.hpp"
#import "config/abi/msvc_suffix.hpp"
#import "config/abi_prefix.hpp"
#import "config/abi_suffix.hpp"
#import "config/auto_link.hpp"
#import "config/compiler/borland.hpp"
#import "config/compiler/clang.hpp"
#import "config/compiler/codegear.hpp"
#import "config/compiler/comeau.hpp"
#import "config/compiler/common_edg.hpp"
#import "config/compiler/compaq_cxx.hpp"
#import "config/compiler/cray.hpp"
#import "config/compiler/digitalmars.hpp"
#import "config/compiler/gcc.hpp"
#import "config/compiler/gcc_xml.hpp"
#import "config/compiler/greenhills.hpp"
#import "config/compiler/hp_acc.hpp"
#import "config/compiler/intel.hpp"
#import "config/compiler/kai.hpp"
#import "config/compiler/metrowerks.hpp"
#import "config/compiler/mpw.hpp"
#import "config/compiler/nvcc.hpp"
#import "config/compiler/pathscale.hpp"
#import "config/compiler/pgi.hpp"
#import "config/compiler/sgi_mipspro.hpp"
#import "config/compiler/sunpro_cc.hpp"
#import "config/compiler/vacpp.hpp"
#import "config/compiler/visualc.hpp"
#import "config/compiler/xlcpp.hpp"
#import "config/no_tr1/cmath.hpp"
#import "config/no_tr1/complex.hpp"
#import "config/no_tr1/functional.hpp"
#import "config/no_tr1/memory.hpp"
#import "config/no_tr1/utility.hpp"
#import "config/platform/aix.hpp"
#import "config/platform/amigaos.hpp"
#import "config/platform/beos.hpp"
#import "config/platform/bsd.hpp"
#import "config/platform/cloudabi.hpp"
#import "config/platform/cray.hpp"
#import "config/platform/cygwin.hpp"
#import "config/platform/haiku.hpp"
#import "config/platform/hpux.hpp"
#import "config/platform/irix.hpp"
#import "config/platform/linux.hpp"
#import "config/platform/macos.hpp"
#import "config/platform/qnxnto.hpp"
#import "config/platform/solaris.hpp"
#import "config/platform/symbian.hpp"
#import "config/platform/vms.hpp"
#import "config/platform/vxworks.hpp"
#import "config/platform/win32.hpp"
#import "config/posix_features.hpp"
#import "config/requires_threads.hpp"
#import "config/select_compiler_config.hpp"
#import "config/select_platform_config.hpp"
#import "config/select_stdlib_config.hpp"
#import "config/stdlib/dinkumware.hpp"
#import "config/stdlib/libcomo.hpp"
#import "config/stdlib/libcpp.hpp"
#import "config/stdlib/libstdcpp3.hpp"
#import "config/stdlib/modena.hpp"
#import "config/stdlib/msl.hpp"
#import "config/stdlib/roguewave.hpp"
#import "config/stdlib/sgi.hpp"
#import "config/stdlib/stlport.hpp"
#import "config/stdlib/vacpp.hpp"
#import "config/suffix.hpp"
#import "config/user.hpp"
#import "config/warning_disable.hpp"
#import "core/addressof.hpp"
#import "core/checked_delete.hpp"
#import "core/demangle.hpp"
#import "core/enable_if.hpp"
#import "core/explicit_operator_bool.hpp"
#import "core/ignore_unused.hpp"
#import "core/is_same.hpp"
#import "core/noncopyable.hpp"
#import "core/no_exceptions_support.hpp"
#import "core/ref.hpp"
#import "core/scoped_enum.hpp"
#import "core/swap.hpp"
#import "core/typeinfo.hpp"
#import "cstdint.hpp"
#import "current_function.hpp"
#import "detail/atomic_redef_macros.hpp"
#import "detail/atomic_undef_macros.hpp"
#import "detail/basic_pointerbuf.hpp"
#import "detail/bitmask.hpp"
#import "detail/call_traits.hpp"
#import "detail/container_fwd.hpp"
#import "detail/endian.hpp"
#import "detail/fenv.hpp"
#import "detail/indirect_traits.hpp"
#import "detail/interlocked.hpp"
#import "detail/is_xxx.hpp"
#import "detail/iterator.hpp"
#import "detail/lcast_precision.hpp"
#import "detail/lightweight_mutex.hpp"
#import "detail/no_exceptions_support.hpp"
#import "detail/reference_content.hpp"
#import "detail/scoped_enum_emulation.hpp"
#import "detail/sp_typeinfo.hpp"
#import "detail/templated_streams.hpp"
#import "detail/utf8_codecvt_facet.hpp"
#import "detail/utf8_codecvt_facet.ipp"
#import "detail/winapi/basic_types.hpp"
#import "detail/winapi/config.hpp"
#import "detail/winapi/crypt.hpp"
#import "detail/winapi/detail/cast_ptr.hpp"
#import "detail/winapi/GetCurrentProcess.hpp"
#import "detail/winapi/GetCurrentThread.hpp"
#import "detail/winapi/GetLastError.hpp"
#import "detail/winapi/GetProcessTimes.hpp"
#import "detail/winapi/GetThreadTimes.hpp"
#import "detail/winapi/process.hpp"
#import "detail/winapi/thread.hpp"
#import "detail/winapi/time.hpp"
#import "detail/winapi/timers.hpp"
#import "detail/workaround.hpp"
#import "enable_shared_from_this.hpp"
#import "function.hpp"
#import "function/detail/function_iterate.hpp"
#import "function/detail/gen_maybe_include.pl"
#import "function/detail/maybe_include.hpp"
#import "function/detail/prologue.hpp"
#import "function/function0.hpp"
#import "function/function1.hpp"
#import "function/function10.hpp"
#import "function/function2.hpp"
#import "function/function3.hpp"
#import "function/function4.hpp"
#import "function/function5.hpp"
#import "function/function6.hpp"
#import "function/function7.hpp"
#import "function/function8.hpp"
#import "function/function9.hpp"
#import "function/function_base.hpp"
#import "function/function_fwd.hpp"
#import "function/function_template.hpp"
#import "functional/hash.hpp"
#import "functional/hash/detail/float_functions.hpp"
#import "functional/hash/detail/hash_float.hpp"
#import "functional/hash/detail/limits.hpp"
#import "functional/hash/extensions.hpp"
#import "functional/hash/hash.hpp"
#import "functional/hash/hash_fwd.hpp"
#import "functional/hash_fwd.hpp"
#import "function_equal.hpp"
#import "function_output_iterator.hpp"
#import "get_pointer.hpp"
#import "integer.hpp"
#import "integer_fwd.hpp"
#import "integer_traits.hpp"
#import "intrusive_ptr.hpp"
#import "is_placeholder.hpp"
#import "iterator.hpp"
#import "iterator/detail/config_def.hpp"
#import "iterator/detail/config_undef.hpp"
#import "iterator/detail/enable_if.hpp"
#import "iterator/detail/facade_iterator_category.hpp"
#import "iterator/interoperable.hpp"
#import "iterator/iterator_adaptor.hpp"
#import "iterator/iterator_categories.hpp"
#import "iterator/iterator_concepts.hpp"
#import "iterator/iterator_facade.hpp"
#import "iterator/iterator_traits.hpp"
#import "iterator/minimum_category.hpp"
#import "iterator/reverse_iterator.hpp"
#import "iterator/transform_iterator.hpp"
#import "limits.hpp"
#import "make_shared.hpp"
#import "math/common_factor_ct.hpp"
#import "math/policies/policy.hpp"
#import "math/special_functions/detail/fp_traits.hpp"
#import "math/special_functions/detail/round_fwd.hpp"
#import "math/special_functions/fpclassify.hpp"
#import "math/special_functions/math_fwd.hpp"
#import "math/special_functions/sign.hpp"
#import "math/tools/config.hpp"
#import "math/tools/promotion.hpp"
#import "math/tools/real_cast.hpp"
#import "math/tools/user.hpp"
#import "math_fwd.hpp"
#import "mem_fn.hpp"
#import "move/adl_move_swap.hpp"
#import "move/algorithm.hpp"
#import "move/core.hpp"
#import "move/default_delete.hpp"
#import "move/detail/config_begin.hpp"
#import "move/detail/config_end.hpp"
#import "move/detail/fwd_macros.hpp"
#import "move/detail/iterator_traits.hpp"
#import "move/detail/meta_utils.hpp"
#import "move/detail/meta_utils_core.hpp"
#import "move/detail/move_helpers.hpp"
#import "move/detail/std_ns_begin.hpp"
#import "move/detail/std_ns_end.hpp"
#import "move/detail/type_traits.hpp"
#import "move/detail/unique_ptr_meta_utils.hpp"
#import "move/detail/workaround.hpp"
#import "move/iterator.hpp"
#import "move/make_unique.hpp"
#import "move/move.hpp"
#import "move/traits.hpp"
#import "move/unique_ptr.hpp"
#import "move/utility.hpp"
#import "move/utility_core.hpp"
#import "mpl/advance.hpp"
#import "mpl/advance_fwd.hpp"
#import "mpl/always.hpp"
#import "mpl/and.hpp"
#import "mpl/apply.hpp"
#import "mpl/apply_fwd.hpp"
#import "mpl/apply_wrap.hpp"
#import "mpl/arg.hpp"
#import "mpl/arg_fwd.hpp"
#import "mpl/assert.hpp"
#import "mpl/at.hpp"
#import "mpl/at_fwd.hpp"
#import "mpl/aux_/adl_barrier.hpp"
#import "mpl/aux_/advance_backward.hpp"
#import "mpl/aux_/advance_forward.hpp"
#import "mpl/aux_/arg_typedef.hpp"
#import "mpl/aux_/arithmetic_op.hpp"
#import "mpl/aux_/arity.hpp"
#import "mpl/aux_/arity_spec.hpp"
#import "mpl/aux_/at_impl.hpp"
#import "mpl/aux_/begin_end_impl.hpp"
#import "mpl/aux_/clear_impl.hpp"
#import "mpl/aux_/common_name_wknd.hpp"
#import "mpl/aux_/comparison_op.hpp"
#import "mpl/aux_/config/adl.hpp"
#import "mpl/aux_/config/arrays.hpp"
#import "mpl/aux_/config/bcc.hpp"
#import "mpl/aux_/config/bind.hpp"
#import "mpl/aux_/config/compiler.hpp"
#import "mpl/aux_/config/ctps.hpp"
#import "mpl/aux_/config/dependent_nttp.hpp"
#import "mpl/aux_/config/dmc_ambiguous_ctps.hpp"
#import "mpl/aux_/config/dtp.hpp"
#import "mpl/aux_/config/eti.hpp"
#import "mpl/aux_/config/forwarding.hpp"
#import "mpl/aux_/config/gcc.hpp"
#import "mpl/aux_/config/gpu.hpp"
#import "mpl/aux_/config/has_apply.hpp"
#import "mpl/aux_/config/has_xxx.hpp"
#import "mpl/aux_/config/integral.hpp"
#import "mpl/aux_/config/intel.hpp"
#import "mpl/aux_/config/lambda.hpp"
#import "mpl/aux_/config/msvc.hpp"
#import "mpl/aux_/config/msvc_typename.hpp"
#import "mpl/aux_/config/nttp.hpp"
#import "mpl/aux_/config/operators.hpp"
#import "mpl/aux_/config/overload_resolution.hpp"
#import "mpl/aux_/config/pp_counter.hpp"
#import "mpl/aux_/config/preprocessor.hpp"
#import "mpl/aux_/config/static_constant.hpp"
#import "mpl/aux_/config/ttp.hpp"
#import "mpl/aux_/config/typeof.hpp"
#import "mpl/aux_/config/use_preprocessed.hpp"
#import "mpl/aux_/config/workaround.hpp"
#import "mpl/aux_/contains_impl.hpp"
#import "mpl/aux_/count_args.hpp"
#import "mpl/aux_/empty_impl.hpp"
#import "mpl/aux_/find_if_pred.hpp"
#import "mpl/aux_/fold_impl.hpp"
#import "mpl/aux_/fold_impl_body.hpp"
#import "mpl/aux_/front_impl.hpp"
#import "mpl/aux_/full_lambda.hpp"
#import "mpl/aux_/has_apply.hpp"
#import "mpl/aux_/has_begin.hpp"
#import "mpl/aux_/has_key_impl.hpp"
#import "mpl/aux_/has_rebind.hpp"
#import "mpl/aux_/has_size.hpp"
#import "mpl/aux_/has_tag.hpp"
#import "mpl/aux_/has_type.hpp"
#import "mpl/aux_/include_preprocessed.hpp"
#import "mpl/aux_/inserter_algorithm.hpp"
#import "mpl/aux_/insert_impl.hpp"
#import "mpl/aux_/integral_wrapper.hpp"
#import "mpl/aux_/is_msvc_eti_arg.hpp"
#import "mpl/aux_/iter_apply.hpp"
#import "mpl/aux_/iter_fold_if_impl.hpp"
#import "mpl/aux_/iter_fold_impl.hpp"
#import "mpl/aux_/lambda_arity_param.hpp"
#import "mpl/aux_/lambda_no_ctps.hpp"
#import "mpl/aux_/lambda_spec.hpp"
#import "mpl/aux_/lambda_support.hpp"
#import "mpl/aux_/largest_int.hpp"
#import "mpl/aux_/logical_op.hpp"
#import "mpl/aux_/msvc_dtw.hpp"
#import "mpl/aux_/msvc_eti_base.hpp"
#import "mpl/aux_/msvc_is_class.hpp"
#import "mpl/aux_/msvc_never_true.hpp"
#import "mpl/aux_/msvc_type.hpp"
#import "mpl/aux_/na.hpp"
#import "mpl/aux_/na_assert.hpp"
#import "mpl/aux_/na_fwd.hpp"
#import "mpl/aux_/na_spec.hpp"
#import "mpl/aux_/nested_type_wknd.hpp"
#import "mpl/aux_/nttp_decl.hpp"
#import "mpl/aux_/numeric_cast_utils.hpp"
#import "mpl/aux_/numeric_op.hpp"
#import "mpl/aux_/O1_size_impl.hpp"
#import "mpl/aux_/overload_names.hpp"
#import "mpl/aux_/preprocessed/bcc/advance_backward.hpp"
#import "mpl/aux_/preprocessed/bcc/advance_forward.hpp"
#import "mpl/aux_/preprocessed/bcc/and.hpp"
#import "mpl/aux_/preprocessed/bcc/apply.hpp"
#import "mpl/aux_/preprocessed/bcc/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/bcc/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/bcc/arg.hpp"
#import "mpl/aux_/preprocessed/bcc/basic_bind.hpp"
#import "mpl/aux_/preprocessed/bcc/bind.hpp"
#import "mpl/aux_/preprocessed/bcc/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/bcc/bitand.hpp"
#import "mpl/aux_/preprocessed/bcc/bitor.hpp"
#import "mpl/aux_/preprocessed/bcc/bitxor.hpp"
#import "mpl/aux_/preprocessed/bcc/deque.hpp"
#import "mpl/aux_/preprocessed/bcc/divides.hpp"
#import "mpl/aux_/preprocessed/bcc/equal_to.hpp"
#import "mpl/aux_/preprocessed/bcc/fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc/full_lambda.hpp"
#import "mpl/aux_/preprocessed/bcc/greater.hpp"
#import "mpl/aux_/preprocessed/bcc/greater_equal.hpp"
#import "mpl/aux_/preprocessed/bcc/inherit.hpp"
#import "mpl/aux_/preprocessed/bcc/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/bcc/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/bcc/less.hpp"
#import "mpl/aux_/preprocessed/bcc/less_equal.hpp"
#import "mpl/aux_/preprocessed/bcc/list.hpp"
#import "mpl/aux_/preprocessed/bcc/list_c.hpp"
#import "mpl/aux_/preprocessed/bcc/map.hpp"
#import "mpl/aux_/preprocessed/bcc/minus.hpp"
#import "mpl/aux_/preprocessed/bcc/modulus.hpp"
#import "mpl/aux_/preprocessed/bcc/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/bcc/or.hpp"
#import "mpl/aux_/preprocessed/bcc/placeholders.hpp"
#import "mpl/aux_/preprocessed/bcc/plus.hpp"
#import "mpl/aux_/preprocessed/bcc/quote.hpp"
#import "mpl/aux_/preprocessed/bcc/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc/set.hpp"
#import "mpl/aux_/preprocessed/bcc/set_c.hpp"
#import "mpl/aux_/preprocessed/bcc/shift_left.hpp"
#import "mpl/aux_/preprocessed/bcc/shift_right.hpp"
#import "mpl/aux_/preprocessed/bcc/template_arity.hpp"
#import "mpl/aux_/preprocessed/bcc/times.hpp"
#import "mpl/aux_/preprocessed/bcc/unpack_args.hpp"
#import "mpl/aux_/preprocessed/bcc/vector.hpp"
#import "mpl/aux_/preprocessed/bcc/vector_c.hpp"
#import "mpl/aux_/preprocessed/bcc551/advance_backward.hpp"
#import "mpl/aux_/preprocessed/bcc551/advance_forward.hpp"
#import "mpl/aux_/preprocessed/bcc551/and.hpp"
#import "mpl/aux_/preprocessed/bcc551/apply.hpp"
#import "mpl/aux_/preprocessed/bcc551/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/bcc551/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/bcc551/arg.hpp"
#import "mpl/aux_/preprocessed/bcc551/basic_bind.hpp"
#import "mpl/aux_/preprocessed/bcc551/bind.hpp"
#import "mpl/aux_/preprocessed/bcc551/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/bcc551/bitand.hpp"
#import "mpl/aux_/preprocessed/bcc551/bitor.hpp"
#import "mpl/aux_/preprocessed/bcc551/bitxor.hpp"
#import "mpl/aux_/preprocessed/bcc551/deque.hpp"
#import "mpl/aux_/preprocessed/bcc551/divides.hpp"
#import "mpl/aux_/preprocessed/bcc551/equal_to.hpp"
#import "mpl/aux_/preprocessed/bcc551/fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc551/full_lambda.hpp"
#import "mpl/aux_/preprocessed/bcc551/greater.hpp"
#import "mpl/aux_/preprocessed/bcc551/greater_equal.hpp"
#import "mpl/aux_/preprocessed/bcc551/inherit.hpp"
#import "mpl/aux_/preprocessed/bcc551/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/bcc551/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc551/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/bcc551/less.hpp"
#import "mpl/aux_/preprocessed/bcc551/less_equal.hpp"
#import "mpl/aux_/preprocessed/bcc551/list.hpp"
#import "mpl/aux_/preprocessed/bcc551/list_c.hpp"
#import "mpl/aux_/preprocessed/bcc551/map.hpp"
#import "mpl/aux_/preprocessed/bcc551/minus.hpp"
#import "mpl/aux_/preprocessed/bcc551/modulus.hpp"
#import "mpl/aux_/preprocessed/bcc551/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/bcc551/or.hpp"
#import "mpl/aux_/preprocessed/bcc551/placeholders.hpp"
#import "mpl/aux_/preprocessed/bcc551/plus.hpp"
#import "mpl/aux_/preprocessed/bcc551/quote.hpp"
#import "mpl/aux_/preprocessed/bcc551/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc551/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc551/set.hpp"
#import "mpl/aux_/preprocessed/bcc551/set_c.hpp"
#import "mpl/aux_/preprocessed/bcc551/shift_left.hpp"
#import "mpl/aux_/preprocessed/bcc551/shift_right.hpp"
#import "mpl/aux_/preprocessed/bcc551/template_arity.hpp"
#import "mpl/aux_/preprocessed/bcc551/times.hpp"
#import "mpl/aux_/preprocessed/bcc551/unpack_args.hpp"
#import "mpl/aux_/preprocessed/bcc551/vector.hpp"
#import "mpl/aux_/preprocessed/bcc551/vector_c.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/advance_backward.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/advance_forward.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/and.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/apply.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/arg.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/basic_bind.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/bind.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/bitand.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/bitor.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/bitxor.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/deque.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/divides.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/equal_to.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/full_lambda.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/greater.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/greater_equal.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/inherit.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/less.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/less_equal.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/list.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/list_c.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/map.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/minus.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/modulus.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/or.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/placeholders.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/plus.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/quote.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/set.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/set_c.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/shift_left.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/shift_right.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/template_arity.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/times.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/unpack_args.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/vector.hpp"
#import "mpl/aux_/preprocessed/bcc_pre590/vector_c.hpp"
#import "mpl/aux_/preprocessed/dmc/advance_backward.hpp"
#import "mpl/aux_/preprocessed/dmc/advance_forward.hpp"
#import "mpl/aux_/preprocessed/dmc/and.hpp"
#import "mpl/aux_/preprocessed/dmc/apply.hpp"
#import "mpl/aux_/preprocessed/dmc/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/dmc/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/dmc/arg.hpp"
#import "mpl/aux_/preprocessed/dmc/basic_bind.hpp"
#import "mpl/aux_/preprocessed/dmc/bind.hpp"
#import "mpl/aux_/preprocessed/dmc/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/dmc/bitand.hpp"
#import "mpl/aux_/preprocessed/dmc/bitor.hpp"
#import "mpl/aux_/preprocessed/dmc/bitxor.hpp"
#import "mpl/aux_/preprocessed/dmc/deque.hpp"
#import "mpl/aux_/preprocessed/dmc/divides.hpp"
#import "mpl/aux_/preprocessed/dmc/equal_to.hpp"
#import "mpl/aux_/preprocessed/dmc/fold_impl.hpp"
#import "mpl/aux_/preprocessed/dmc/full_lambda.hpp"
#import "mpl/aux_/preprocessed/dmc/greater.hpp"
#import "mpl/aux_/preprocessed/dmc/greater_equal.hpp"
#import "mpl/aux_/preprocessed/dmc/inherit.hpp"
#import "mpl/aux_/preprocessed/dmc/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/dmc/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/dmc/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/dmc/less.hpp"
#import "mpl/aux_/preprocessed/dmc/less_equal.hpp"
#import "mpl/aux_/preprocessed/dmc/list.hpp"
#import "mpl/aux_/preprocessed/dmc/list_c.hpp"
#import "mpl/aux_/preprocessed/dmc/map.hpp"
#import "mpl/aux_/preprocessed/dmc/minus.hpp"
#import "mpl/aux_/preprocessed/dmc/modulus.hpp"
#import "mpl/aux_/preprocessed/dmc/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/dmc/or.hpp"
#import "mpl/aux_/preprocessed/dmc/placeholders.hpp"
#import "mpl/aux_/preprocessed/dmc/plus.hpp"
#import "mpl/aux_/preprocessed/dmc/quote.hpp"
#import "mpl/aux_/preprocessed/dmc/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/dmc/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/dmc/set.hpp"
#import "mpl/aux_/preprocessed/dmc/set_c.hpp"
#import "mpl/aux_/preprocessed/dmc/shift_left.hpp"
#import "mpl/aux_/preprocessed/dmc/shift_right.hpp"
#import "mpl/aux_/preprocessed/dmc/template_arity.hpp"
#import "mpl/aux_/preprocessed/dmc/times.hpp"
#import "mpl/aux_/preprocessed/dmc/unpack_args.hpp"
#import "mpl/aux_/preprocessed/dmc/vector.hpp"
#import "mpl/aux_/preprocessed/dmc/vector_c.hpp"
#import "mpl/aux_/preprocessed/gcc/advance_backward.hpp"
#import "mpl/aux_/preprocessed/gcc/advance_forward.hpp"
#import "mpl/aux_/preprocessed/gcc/and.hpp"
#import "mpl/aux_/preprocessed/gcc/apply.hpp"
#import "mpl/aux_/preprocessed/gcc/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/gcc/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/gcc/arg.hpp"
#import "mpl/aux_/preprocessed/gcc/basic_bind.hpp"
#import "mpl/aux_/preprocessed/gcc/bind.hpp"
#import "mpl/aux_/preprocessed/gcc/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/gcc/bitand.hpp"
#import "mpl/aux_/preprocessed/gcc/bitor.hpp"
#import "mpl/aux_/preprocessed/gcc/bitxor.hpp"
#import "mpl/aux_/preprocessed/gcc/deque.hpp"
#import "mpl/aux_/preprocessed/gcc/divides.hpp"
#import "mpl/aux_/preprocessed/gcc/equal_to.hpp"
#import "mpl/aux_/preprocessed/gcc/fold_impl.hpp"
#import "mpl/aux_/preprocessed/gcc/full_lambda.hpp"
#import "mpl/aux_/preprocessed/gcc/greater.hpp"
#import "mpl/aux_/preprocessed/gcc/greater_equal.hpp"
#import "mpl/aux_/preprocessed/gcc/inherit.hpp"
#import "mpl/aux_/preprocessed/gcc/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/gcc/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/gcc/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/gcc/less.hpp"
#import "mpl/aux_/preprocessed/gcc/less_equal.hpp"
#import "mpl/aux_/preprocessed/gcc/list.hpp"
#import "mpl/aux_/preprocessed/gcc/list_c.hpp"
#import "mpl/aux_/preprocessed/gcc/map.hpp"
#import "mpl/aux_/preprocessed/gcc/minus.hpp"
#import "mpl/aux_/preprocessed/gcc/modulus.hpp"
#import "mpl/aux_/preprocessed/gcc/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/gcc/or.hpp"
#import "mpl/aux_/preprocessed/gcc/placeholders.hpp"
#import "mpl/aux_/preprocessed/gcc/plus.hpp"
#import "mpl/aux_/preprocessed/gcc/quote.hpp"
#import "mpl/aux_/preprocessed/gcc/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/gcc/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/gcc/set.hpp"
#import "mpl/aux_/preprocessed/gcc/set_c.hpp"
#import "mpl/aux_/preprocessed/gcc/shift_left.hpp"
#import "mpl/aux_/preprocessed/gcc/shift_right.hpp"
#import "mpl/aux_/preprocessed/gcc/template_arity.hpp"
#import "mpl/aux_/preprocessed/gcc/times.hpp"
#import "mpl/aux_/preprocessed/gcc/unpack_args.hpp"
#import "mpl/aux_/preprocessed/gcc/vector.hpp"
#import "mpl/aux_/preprocessed/gcc/vector_c.hpp"
#import "mpl/aux_/preprocessed/msvc60/advance_backward.hpp"
#import "mpl/aux_/preprocessed/msvc60/advance_forward.hpp"
#import "mpl/aux_/preprocessed/msvc60/and.hpp"
#import "mpl/aux_/preprocessed/msvc60/apply.hpp"
#import "mpl/aux_/preprocessed/msvc60/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/msvc60/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/msvc60/arg.hpp"
#import "mpl/aux_/preprocessed/msvc60/basic_bind.hpp"
#import "mpl/aux_/preprocessed/msvc60/bind.hpp"
#import "mpl/aux_/preprocessed/msvc60/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/msvc60/bitand.hpp"
#import "mpl/aux_/preprocessed/msvc60/bitor.hpp"
#import "mpl/aux_/preprocessed/msvc60/bitxor.hpp"
#import "mpl/aux_/preprocessed/msvc60/deque.hpp"
#import "mpl/aux_/preprocessed/msvc60/divides.hpp"
#import "mpl/aux_/preprocessed/msvc60/equal_to.hpp"
#import "mpl/aux_/preprocessed/msvc60/fold_impl.hpp"
#import "mpl/aux_/preprocessed/msvc60/full_lambda.hpp"
#import "mpl/aux_/preprocessed/msvc60/greater.hpp"
#import "mpl/aux_/preprocessed/msvc60/greater_equal.hpp"
#import "mpl/aux_/preprocessed/msvc60/inherit.hpp"
#import "mpl/aux_/preprocessed/msvc60/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/msvc60/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/msvc60/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/msvc60/less.hpp"
#import "mpl/aux_/preprocessed/msvc60/less_equal.hpp"
#import "mpl/aux_/preprocessed/msvc60/list.hpp"
#import "mpl/aux_/preprocessed/msvc60/list_c.hpp"
#import "mpl/aux_/preprocessed/msvc60/map.hpp"
#import "mpl/aux_/preprocessed/msvc60/minus.hpp"
#import "mpl/aux_/preprocessed/msvc60/modulus.hpp"
#import "mpl/aux_/preprocessed/msvc60/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/msvc60/or.hpp"
#import "mpl/aux_/preprocessed/msvc60/placeholders.hpp"
#import "mpl/aux_/preprocessed/msvc60/plus.hpp"
#import "mpl/aux_/preprocessed/msvc60/quote.hpp"
#import "mpl/aux_/preprocessed/msvc60/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/msvc60/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/msvc60/set.hpp"
#import "mpl/aux_/preprocessed/msvc60/set_c.hpp"
#import "mpl/aux_/preprocessed/msvc60/shift_left.hpp"
#import "mpl/aux_/preprocessed/msvc60/shift_right.hpp"
#import "mpl/aux_/preprocessed/msvc60/template_arity.hpp"
#import "mpl/aux_/preprocessed/msvc60/times.hpp"
#import "mpl/aux_/preprocessed/msvc60/unpack_args.hpp"
#import "mpl/aux_/preprocessed/msvc60/vector.hpp"
#import "mpl/aux_/preprocessed/msvc60/vector_c.hpp"
#import "mpl/aux_/preprocessed/msvc70/advance_backward.hpp"
#import "mpl/aux_/preprocessed/msvc70/advance_forward.hpp"
#import "mpl/aux_/preprocessed/msvc70/and.hpp"
#import "mpl/aux_/preprocessed/msvc70/apply.hpp"
#import "mpl/aux_/preprocessed/msvc70/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/msvc70/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/msvc70/arg.hpp"
#import "mpl/aux_/preprocessed/msvc70/basic_bind.hpp"
#import "mpl/aux_/preprocessed/msvc70/bind.hpp"
#import "mpl/aux_/preprocessed/msvc70/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/msvc70/bitand.hpp"
#import "mpl/aux_/preprocessed/msvc70/bitor.hpp"
#import "mpl/aux_/preprocessed/msvc70/bitxor.hpp"
#import "mpl/aux_/preprocessed/msvc70/deque.hpp"
#import "mpl/aux_/preprocessed/msvc70/divides.hpp"
#import "mpl/aux_/preprocessed/msvc70/equal_to.hpp"
#import "mpl/aux_/preprocessed/msvc70/fold_impl.hpp"
#import "mpl/aux_/preprocessed/msvc70/full_lambda.hpp"
#import "mpl/aux_/preprocessed/msvc70/greater.hpp"
#import "mpl/aux_/preprocessed/msvc70/greater_equal.hpp"
#import "mpl/aux_/preprocessed/msvc70/inherit.hpp"
#import "mpl/aux_/preprocessed/msvc70/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/msvc70/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/msvc70/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/msvc70/less.hpp"
#import "mpl/aux_/preprocessed/msvc70/less_equal.hpp"
#import "mpl/aux_/preprocessed/msvc70/list.hpp"
#import "mpl/aux_/preprocessed/msvc70/list_c.hpp"
#import "mpl/aux_/preprocessed/msvc70/map.hpp"
#import "mpl/aux_/preprocessed/msvc70/minus.hpp"
#import "mpl/aux_/preprocessed/msvc70/modulus.hpp"
#import "mpl/aux_/preprocessed/msvc70/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/msvc70/or.hpp"
#import "mpl/aux_/preprocessed/msvc70/placeholders.hpp"
#import "mpl/aux_/preprocessed/msvc70/plus.hpp"
#import "mpl/aux_/preprocessed/msvc70/quote.hpp"
#import "mpl/aux_/preprocessed/msvc70/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/msvc70/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/msvc70/set.hpp"
#import "mpl/aux_/preprocessed/msvc70/set_c.hpp"
#import "mpl/aux_/preprocessed/msvc70/shift_left.hpp"
#import "mpl/aux_/preprocessed/msvc70/shift_right.hpp"
#import "mpl/aux_/preprocessed/msvc70/template_arity.hpp"
#import "mpl/aux_/preprocessed/msvc70/times.hpp"
#import "mpl/aux_/preprocessed/msvc70/unpack_args.hpp"
#import "mpl/aux_/preprocessed/msvc70/vector.hpp"
#import "mpl/aux_/preprocessed/msvc70/vector_c.hpp"
#import "mpl/aux_/preprocessed/mwcw/advance_backward.hpp"
#import "mpl/aux_/preprocessed/mwcw/advance_forward.hpp"
#import "mpl/aux_/preprocessed/mwcw/and.hpp"
#import "mpl/aux_/preprocessed/mwcw/apply.hpp"
#import "mpl/aux_/preprocessed/mwcw/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/mwcw/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/mwcw/arg.hpp"
#import "mpl/aux_/preprocessed/mwcw/basic_bind.hpp"
#import "mpl/aux_/preprocessed/mwcw/bind.hpp"
#import "mpl/aux_/preprocessed/mwcw/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/mwcw/bitand.hpp"
#import "mpl/aux_/preprocessed/mwcw/bitor.hpp"
#import "mpl/aux_/preprocessed/mwcw/bitxor.hpp"
#import "mpl/aux_/preprocessed/mwcw/deque.hpp"
#import "mpl/aux_/preprocessed/mwcw/divides.hpp"
#import "mpl/aux_/preprocessed/mwcw/equal_to.hpp"
#import "mpl/aux_/preprocessed/mwcw/fold_impl.hpp"
#import "mpl/aux_/preprocessed/mwcw/full_lambda.hpp"
#import "mpl/aux_/preprocessed/mwcw/greater.hpp"
#import "mpl/aux_/preprocessed/mwcw/greater_equal.hpp"
#import "mpl/aux_/preprocessed/mwcw/inherit.hpp"
#import "mpl/aux_/preprocessed/mwcw/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/mwcw/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/mwcw/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/mwcw/less.hpp"
#import "mpl/aux_/preprocessed/mwcw/less_equal.hpp"
#import "mpl/aux_/preprocessed/mwcw/list.hpp"
#import "mpl/aux_/preprocessed/mwcw/list_c.hpp"
#import "mpl/aux_/preprocessed/mwcw/map.hpp"
#import "mpl/aux_/preprocessed/mwcw/minus.hpp"
#import "mpl/aux_/preprocessed/mwcw/modulus.hpp"
#import "mpl/aux_/preprocessed/mwcw/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/mwcw/or.hpp"
#import "mpl/aux_/preprocessed/mwcw/placeholders.hpp"
#import "mpl/aux_/preprocessed/mwcw/plus.hpp"
#import "mpl/aux_/preprocessed/mwcw/quote.hpp"
#import "mpl/aux_/preprocessed/mwcw/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/mwcw/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/mwcw/set.hpp"
#import "mpl/aux_/preprocessed/mwcw/set_c.hpp"
#import "mpl/aux_/preprocessed/mwcw/shift_left.hpp"
#import "mpl/aux_/preprocessed/mwcw/shift_right.hpp"
#import "mpl/aux_/preprocessed/mwcw/template_arity.hpp"
#import "mpl/aux_/preprocessed/mwcw/times.hpp"
#import "mpl/aux_/preprocessed/mwcw/unpack_args.hpp"
#import "mpl/aux_/preprocessed/mwcw/vector.hpp"
#import "mpl/aux_/preprocessed/mwcw/vector_c.hpp"
#import "mpl/aux_/preprocessed/no_ctps/advance_backward.hpp"
#import "mpl/aux_/preprocessed/no_ctps/advance_forward.hpp"
#import "mpl/aux_/preprocessed/no_ctps/and.hpp"
#import "mpl/aux_/preprocessed/no_ctps/apply.hpp"
#import "mpl/aux_/preprocessed/no_ctps/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/no_ctps/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/no_ctps/arg.hpp"
#import "mpl/aux_/preprocessed/no_ctps/basic_bind.hpp"
#import "mpl/aux_/preprocessed/no_ctps/bind.hpp"
#import "mpl/aux_/preprocessed/no_ctps/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/no_ctps/bitand.hpp"
#import "mpl/aux_/preprocessed/no_ctps/bitor.hpp"
#import "mpl/aux_/preprocessed/no_ctps/bitxor.hpp"
#import "mpl/aux_/preprocessed/no_ctps/deque.hpp"
#import "mpl/aux_/preprocessed/no_ctps/divides.hpp"
#import "mpl/aux_/preprocessed/no_ctps/equal_to.hpp"
#import "mpl/aux_/preprocessed/no_ctps/fold_impl.hpp"
#import "mpl/aux_/preprocessed/no_ctps/full_lambda.hpp"
#import "mpl/aux_/preprocessed/no_ctps/greater.hpp"
#import "mpl/aux_/preprocessed/no_ctps/greater_equal.hpp"
#import "mpl/aux_/preprocessed/no_ctps/inherit.hpp"
#import "mpl/aux_/preprocessed/no_ctps/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/no_ctps/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/no_ctps/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/no_ctps/less.hpp"
#import "mpl/aux_/preprocessed/no_ctps/less_equal.hpp"
#import "mpl/aux_/preprocessed/no_ctps/list.hpp"
#import "mpl/aux_/preprocessed/no_ctps/list_c.hpp"
#import "mpl/aux_/preprocessed/no_ctps/map.hpp"
#import "mpl/aux_/preprocessed/no_ctps/minus.hpp"
#import "mpl/aux_/preprocessed/no_ctps/modulus.hpp"
#import "mpl/aux_/preprocessed/no_ctps/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/no_ctps/or.hpp"
#import "mpl/aux_/preprocessed/no_ctps/placeholders.hpp"
#import "mpl/aux_/preprocessed/no_ctps/plus.hpp"
#import "mpl/aux_/preprocessed/no_ctps/quote.hpp"
#import "mpl/aux_/preprocessed/no_ctps/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/no_ctps/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/no_ctps/set.hpp"
#import "mpl/aux_/preprocessed/no_ctps/set_c.hpp"
#import "mpl/aux_/preprocessed/no_ctps/shift_left.hpp"
#import "mpl/aux_/preprocessed/no_ctps/shift_right.hpp"
#import "mpl/aux_/preprocessed/no_ctps/template_arity.hpp"
#import "mpl/aux_/preprocessed/no_ctps/times.hpp"
#import "mpl/aux_/preprocessed/no_ctps/unpack_args.hpp"
#import "mpl/aux_/preprocessed/no_ctps/vector.hpp"
#import "mpl/aux_/preprocessed/no_ctps/vector_c.hpp"
#import "mpl/aux_/preprocessed/no_ttp/advance_backward.hpp"
#import "mpl/aux_/preprocessed/no_ttp/advance_forward.hpp"
#import "mpl/aux_/preprocessed/no_ttp/and.hpp"
#import "mpl/aux_/preprocessed/no_ttp/apply.hpp"
#import "mpl/aux_/preprocessed/no_ttp/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/no_ttp/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/no_ttp/arg.hpp"
#import "mpl/aux_/preprocessed/no_ttp/basic_bind.hpp"
#import "mpl/aux_/preprocessed/no_ttp/bind.hpp"
#import "mpl/aux_/preprocessed/no_ttp/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/no_ttp/bitand.hpp"
#import "mpl/aux_/preprocessed/no_ttp/bitor.hpp"
#import "mpl/aux_/preprocessed/no_ttp/bitxor.hpp"
#import "mpl/aux_/preprocessed/no_ttp/deque.hpp"
#import "mpl/aux_/preprocessed/no_ttp/divides.hpp"
#import "mpl/aux_/preprocessed/no_ttp/equal_to.hpp"
#import "mpl/aux_/preprocessed/no_ttp/fold_impl.hpp"
#import "mpl/aux_/preprocessed/no_ttp/full_lambda.hpp"
#import "mpl/aux_/preprocessed/no_ttp/greater.hpp"
#import "mpl/aux_/preprocessed/no_ttp/greater_equal.hpp"
#import "mpl/aux_/preprocessed/no_ttp/inherit.hpp"
#import "mpl/aux_/preprocessed/no_ttp/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/no_ttp/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/no_ttp/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/no_ttp/less.hpp"
#import "mpl/aux_/preprocessed/no_ttp/less_equal.hpp"
#import "mpl/aux_/preprocessed/no_ttp/list.hpp"
#import "mpl/aux_/preprocessed/no_ttp/list_c.hpp"
#import "mpl/aux_/preprocessed/no_ttp/map.hpp"
#import "mpl/aux_/preprocessed/no_ttp/minus.hpp"
#import "mpl/aux_/preprocessed/no_ttp/modulus.hpp"
#import "mpl/aux_/preprocessed/no_ttp/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/no_ttp/or.hpp"
#import "mpl/aux_/preprocessed/no_ttp/placeholders.hpp"
#import "mpl/aux_/preprocessed/no_ttp/plus.hpp"
#import "mpl/aux_/preprocessed/no_ttp/quote.hpp"
#import "mpl/aux_/preprocessed/no_ttp/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/no_ttp/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/no_ttp/set.hpp"
#import "mpl/aux_/preprocessed/no_ttp/set_c.hpp"
#import "mpl/aux_/preprocessed/no_ttp/shift_left.hpp"
#import "mpl/aux_/preprocessed/no_ttp/shift_right.hpp"
#import "mpl/aux_/preprocessed/no_ttp/template_arity.hpp"
#import "mpl/aux_/preprocessed/no_ttp/times.hpp"
#import "mpl/aux_/preprocessed/no_ttp/unpack_args.hpp"
#import "mpl/aux_/preprocessed/no_ttp/vector.hpp"
#import "mpl/aux_/preprocessed/no_ttp/vector_c.hpp"
#import "mpl/aux_/preprocessed/plain/advance_backward.hpp"
#import "mpl/aux_/preprocessed/plain/advance_forward.hpp"
#import "mpl/aux_/preprocessed/plain/and.hpp"
#import "mpl/aux_/preprocessed/plain/apply.hpp"
#import "mpl/aux_/preprocessed/plain/apply_fwd.hpp"
#import "mpl/aux_/preprocessed/plain/apply_wrap.hpp"
#import "mpl/aux_/preprocessed/plain/arg.hpp"
#import "mpl/aux_/preprocessed/plain/basic_bind.hpp"
#import "mpl/aux_/preprocessed/plain/bind.hpp"
#import "mpl/aux_/preprocessed/plain/bind_fwd.hpp"
#import "mpl/aux_/preprocessed/plain/bitand.hpp"
#import "mpl/aux_/preprocessed/plain/bitor.hpp"
#import "mpl/aux_/preprocessed/plain/bitxor.hpp"
#import "mpl/aux_/preprocessed/plain/deque.hpp"
#import "mpl/aux_/preprocessed/plain/divides.hpp"
#import "mpl/aux_/preprocessed/plain/equal_to.hpp"
#import "mpl/aux_/preprocessed/plain/fold_impl.hpp"
#import "mpl/aux_/preprocessed/plain/full_lambda.hpp"
#import "mpl/aux_/preprocessed/plain/greater.hpp"
#import "mpl/aux_/preprocessed/plain/greater_equal.hpp"
#import "mpl/aux_/preprocessed/plain/inherit.hpp"
#import "mpl/aux_/preprocessed/plain/iter_fold_if_impl.hpp"
#import "mpl/aux_/preprocessed/plain/iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/plain/lambda_no_ctps.hpp"
#import "mpl/aux_/preprocessed/plain/less.hpp"
#import "mpl/aux_/preprocessed/plain/less_equal.hpp"
#import "mpl/aux_/preprocessed/plain/list.hpp"
#import "mpl/aux_/preprocessed/plain/list_c.hpp"
#import "mpl/aux_/preprocessed/plain/map.hpp"
#import "mpl/aux_/preprocessed/plain/minus.hpp"
#import "mpl/aux_/preprocessed/plain/modulus.hpp"
#import "mpl/aux_/preprocessed/plain/not_equal_to.hpp"
#import "mpl/aux_/preprocessed/plain/or.hpp"
#import "mpl/aux_/preprocessed/plain/placeholders.hpp"
#import "mpl/aux_/preprocessed/plain/plus.hpp"
#import "mpl/aux_/preprocessed/plain/quote.hpp"
#import "mpl/aux_/preprocessed/plain/reverse_fold_impl.hpp"
#import "mpl/aux_/preprocessed/plain/reverse_iter_fold_impl.hpp"
#import "mpl/aux_/preprocessed/plain/set.hpp"
#import "mpl/aux_/preprocessed/plain/set_c.hpp"
#import "mpl/aux_/preprocessed/plain/shift_left.hpp"
#import "mpl/aux_/preprocessed/plain/shift_right.hpp"
#import "mpl/aux_/preprocessed/plain/template_arity.hpp"
#import "mpl/aux_/preprocessed/plain/times.hpp"
#import "mpl/aux_/preprocessed/plain/unpack_args.hpp"
#import "mpl/aux_/preprocessed/plain/vector.hpp"
#import "mpl/aux_/preprocessed/plain/vector_c.hpp"
#import "mpl/aux_/preprocessor/add.hpp"
#import "mpl/aux_/preprocessor/default_params.hpp"
#import "mpl/aux_/preprocessor/def_params_tail.hpp"
#import "mpl/aux_/preprocessor/enum.hpp"
#import "mpl/aux_/preprocessor/ext_params.hpp"
#import "mpl/aux_/preprocessor/filter_params.hpp"
#import "mpl/aux_/preprocessor/params.hpp"
#import "mpl/aux_/preprocessor/partial_spec_params.hpp"
#import "mpl/aux_/preprocessor/range.hpp"
#import "mpl/aux_/preprocessor/repeat.hpp"
#import "mpl/aux_/preprocessor/sub.hpp"
#import "mpl/aux_/preprocessor/tuple.hpp"
#import "mpl/aux_/ptr_to_ref.hpp"
#import "mpl/aux_/push_back_impl.hpp"
#import "mpl/aux_/push_front_impl.hpp"
#import "mpl/aux_/reverse_fold_impl.hpp"
#import "mpl/aux_/reverse_fold_impl_body.hpp"
#import "mpl/aux_/sequence_wrapper.hpp"
#import "mpl/aux_/size_impl.hpp"
#import "mpl/aux_/static_cast.hpp"
#import "mpl/aux_/template_arity.hpp"
#import "mpl/aux_/template_arity_fwd.hpp"
#import "mpl/aux_/traits_lambda_spec.hpp"
#import "mpl/aux_/type_wrapper.hpp"
#import "mpl/aux_/value_wknd.hpp"
#import "mpl/aux_/yes_no.hpp"
#import "mpl/back_fwd.hpp"
#import "mpl/back_inserter.hpp"
#import "mpl/base.hpp"
#import "mpl/begin.hpp"
#import "mpl/begin_end.hpp"
#import "mpl/begin_end_fwd.hpp"
#import "mpl/bind.hpp"
#import "mpl/bind_fwd.hpp"
#import "mpl/bool.hpp"
#import "mpl/bool_fwd.hpp"
#import "mpl/clear.hpp"
#import "mpl/clear_fwd.hpp"
#import "mpl/comparison.hpp"
#import "mpl/contains.hpp"
#import "mpl/contains_fwd.hpp"
#import "mpl/deref.hpp"
#import "mpl/distance.hpp"
#import "mpl/distance_fwd.hpp"
#import "mpl/empty.hpp"
#import "mpl/empty_fwd.hpp"
#import "mpl/end.hpp"
#import "mpl/equal_to.hpp"
#import "mpl/erase_fwd.hpp"
#import "mpl/erase_key_fwd.hpp"
#import "mpl/eval_if.hpp"
#import "mpl/find.hpp"
#import "mpl/find_if.hpp"
#import "mpl/fold.hpp"
#import "mpl/front.hpp"
#import "mpl/front_fwd.hpp"
#import "mpl/front_inserter.hpp"
#import "mpl/greater.hpp"
#import "mpl/greater_equal.hpp"
#import "mpl/has_key.hpp"
#import "mpl/has_key_fwd.hpp"
#import "mpl/has_xxx.hpp"
#import "mpl/identity.hpp"
#import "mpl/if.hpp"
#import "mpl/insert.hpp"
#import "mpl/inserter.hpp"
#import "mpl/insert_fwd.hpp"
#import "mpl/insert_range_fwd.hpp"
#import "mpl/int.hpp"
#import "mpl/integral_c.hpp"
#import "mpl/integral_c_fwd.hpp"
#import "mpl/integral_c_tag.hpp"
#import "mpl/int_fwd.hpp"
#import "mpl/is_placeholder.hpp"
#import "mpl/is_sequence.hpp"
#import "mpl/iterator_category.hpp"
#import "mpl/iterator_range.hpp"
#import "mpl/iterator_tags.hpp"
#import "mpl/iter_fold.hpp"
#import "mpl/iter_fold_if.hpp"
#import "mpl/key_type_fwd.hpp"
#import "mpl/lambda.hpp"
#import "mpl/lambda_fwd.hpp"
#import "mpl/less.hpp"
#import "mpl/less_equal.hpp"
#import "mpl/limits/arity.hpp"
#import "mpl/limits/list.hpp"
#import "mpl/limits/unrolling.hpp"
#import "mpl/limits/vector.hpp"
#import "mpl/list.hpp"
#import "mpl/list/aux_/begin_end.hpp"
#import "mpl/list/aux_/clear.hpp"
#import "mpl/list/aux_/empty.hpp"
#import "mpl/list/aux_/front.hpp"
#import "mpl/list/aux_/include_preprocessed.hpp"
#import "mpl/list/aux_/item.hpp"
#import "mpl/list/aux_/iterator.hpp"
#import "mpl/list/aux_/numbered.hpp"
#import "mpl/list/aux_/numbered_c.hpp"
#import "mpl/list/aux_/O1_size.hpp"
#import "mpl/list/aux_/pop_front.hpp"
#import "mpl/list/aux_/preprocessed/plain/list10.hpp"
#import "mpl/list/aux_/preprocessed/plain/list10_c.hpp"
#import "mpl/list/aux_/preprocessed/plain/list20.hpp"
#import "mpl/list/aux_/preprocessed/plain/list20_c.hpp"
#import "mpl/list/aux_/preprocessed/plain/list30.hpp"
#import "mpl/list/aux_/preprocessed/plain/list30_c.hpp"
#import "mpl/list/aux_/preprocessed/plain/list40.hpp"
#import "mpl/list/aux_/preprocessed/plain/list40_c.hpp"
#import "mpl/list/aux_/preprocessed/plain/list50.hpp"
#import "mpl/list/aux_/preprocessed/plain/list50_c.hpp"
#import "mpl/list/aux_/push_back.hpp"
#import "mpl/list/aux_/push_front.hpp"
#import "mpl/list/aux_/size.hpp"
#import "mpl/list/aux_/tag.hpp"
#import "mpl/list/list0.hpp"
#import "mpl/list/list0_c.hpp"
#import "mpl/list/list10.hpp"
#import "mpl/list/list10_c.hpp"
#import "mpl/list/list20.hpp"
#import "mpl/list/list20_c.hpp"
#import "mpl/list/list30.hpp"
#import "mpl/list/list30_c.hpp"
#import "mpl/list/list40.hpp"
#import "mpl/list/list40_c.hpp"
#import "mpl/list/list50.hpp"
#import "mpl/list/list50_c.hpp"
#import "mpl/logical.hpp"
#import "mpl/long.hpp"
#import "mpl/long_fwd.hpp"
#import "mpl/max_element.hpp"
#import "mpl/minus.hpp"
#import "mpl/min_max.hpp"
#import "mpl/multiplies.hpp"
#import "mpl/negate.hpp"
#import "mpl/next.hpp"
#import "mpl/next_prior.hpp"
#import "mpl/not.hpp"
#import "mpl/not_equal_to.hpp"
#import "mpl/numeric_cast.hpp"
#import "mpl/O1_size.hpp"
#import "mpl/O1_size_fwd.hpp"
#import "mpl/or.hpp"
#import "mpl/pair.hpp"
#import "mpl/pair_view.hpp"
#import "mpl/placeholders.hpp"
#import "mpl/plus.hpp"
#import "mpl/pop_back_fwd.hpp"
#import "mpl/pop_front_fwd.hpp"
#import "mpl/prior.hpp"
#import "mpl/protect.hpp"
#import "mpl/push_back.hpp"
#import "mpl/push_back_fwd.hpp"
#import "mpl/push_front.hpp"
#import "mpl/push_front_fwd.hpp"
#import "mpl/quote.hpp"
#import "mpl/remove_if.hpp"
#import "mpl/reverse_fold.hpp"
#import "mpl/same_as.hpp"
#import "mpl/sequence_tag.hpp"
#import "mpl/sequence_tag_fwd.hpp"
#import "mpl/set/aux_/at_impl.hpp"
#import "mpl/set/aux_/begin_end_impl.hpp"
#import "mpl/set/aux_/clear_impl.hpp"
#import "mpl/set/aux_/empty_impl.hpp"
#import "mpl/set/aux_/erase_impl.hpp"
#import "mpl/set/aux_/erase_key_impl.hpp"
#import "mpl/set/aux_/has_key_impl.hpp"
#import "mpl/set/aux_/insert_impl.hpp"
#import "mpl/set/aux_/insert_range_impl.hpp"
#import "mpl/set/aux_/item.hpp"
#import "mpl/set/aux_/iterator.hpp"
#import "mpl/set/aux_/key_type_impl.hpp"
#import "mpl/set/aux_/set0.hpp"
#import "mpl/set/aux_/size_impl.hpp"
#import "mpl/set/aux_/tag.hpp"
#import "mpl/set/aux_/value_type_impl.hpp"
#import "mpl/set/set0.hpp"
#import "mpl/size.hpp"
#import "mpl/sizeof.hpp"
#import "mpl/size_fwd.hpp"
#import "mpl/size_t.hpp"
#import "mpl/size_t_fwd.hpp"
#import "mpl/tag.hpp"
#import "mpl/times.hpp"
#import "mpl/transform.hpp"
#import "mpl/value_type_fwd.hpp"
#import "mpl/vector.hpp"
#import "mpl/vector/aux_/at.hpp"
#import "mpl/vector/aux_/back.hpp"
#import "mpl/vector/aux_/begin_end.hpp"
#import "mpl/vector/aux_/clear.hpp"
#import "mpl/vector/aux_/empty.hpp"
#import "mpl/vector/aux_/front.hpp"
#import "mpl/vector/aux_/include_preprocessed.hpp"
#import "mpl/vector/aux_/item.hpp"
#import "mpl/vector/aux_/iterator.hpp"
#import "mpl/vector/aux_/numbered.hpp"
#import "mpl/vector/aux_/numbered_c.hpp"
#import "mpl/vector/aux_/O1_size.hpp"
#import "mpl/vector/aux_/pop_back.hpp"
#import "mpl/vector/aux_/pop_front.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector10.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector10_c.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector20.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector20_c.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector30.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector30_c.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector40.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector40_c.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector50.hpp"
#import "mpl/vector/aux_/preprocessed/no_ctps/vector50_c.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector10.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector10_c.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector20.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector20_c.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector30.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector30_c.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector40.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector40_c.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector50.hpp"
#import "mpl/vector/aux_/preprocessed/plain/vector50_c.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector10.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector10_c.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector20.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector20_c.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector30.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector30_c.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector40.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector40_c.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector50.hpp"
#import "mpl/vector/aux_/preprocessed/typeof_based/vector50_c.hpp"
#import "mpl/vector/aux_/push_back.hpp"
#import "mpl/vector/aux_/push_front.hpp"
#import "mpl/vector/aux_/size.hpp"
#import "mpl/vector/aux_/tag.hpp"
#import "mpl/vector/aux_/vector0.hpp"
#import "mpl/vector/vector0.hpp"
#import "mpl/vector/vector0_c.hpp"
#import "mpl/vector/vector10.hpp"
#import "mpl/vector/vector10_c.hpp"
#import "mpl/vector/vector20.hpp"
#import "mpl/vector/vector20_c.hpp"
#import "mpl/vector/vector30.hpp"
#import "mpl/vector/vector30_c.hpp"
#import "mpl/vector/vector40.hpp"
#import "mpl/vector/vector40_c.hpp"
#import "mpl/vector/vector50.hpp"
#import "mpl/vector/vector50_c.hpp"
#import "mpl/void.hpp"
#import "mpl/void_fwd.hpp"
#import "multi_index/detail/scope_guard.hpp"
#import "next_prior.hpp"
#import "noncopyable.hpp"
#import "none.hpp"
#import "none_t.hpp"
#import "optional.hpp"
#import "optional/bad_optional_access.hpp"
#import "optional/optional.hpp"
#import "optional/optional_fwd.hpp"
#import "parameter.hpp"
#import "parameter/aux_/arg_list.hpp"
#import "parameter/aux_/cast.hpp"
#import "parameter/aux_/default.hpp"
#import "parameter/aux_/is_maybe.hpp"
#import "parameter/aux_/overloads.hpp"
#import "parameter/aux_/parameter_requirements.hpp"
#import "parameter/aux_/parenthesized_type.hpp"
#import "parameter/aux_/preprocessor/flatten.hpp"
#import "parameter/aux_/preprocessor/for_each.hpp"
#import "parameter/aux_/result_of0.hpp"
#import "parameter/aux_/set.hpp"
#import "parameter/aux_/tag.hpp"
#import "parameter/aux_/tagged_argument.hpp"
#import "parameter/aux_/template_keyword.hpp"
#import "parameter/aux_/unwrap_cv_reference.hpp"
#import "parameter/aux_/void.hpp"
#import "parameter/aux_/yesno.hpp"
#import "parameter/binding.hpp"
#import "parameter/config.hpp"
#import "parameter/keyword.hpp"
#import "parameter/macros.hpp"
#import "parameter/match.hpp"
#import "parameter/name.hpp"
#import "parameter/parameters.hpp"
#import "parameter/preprocessor.hpp"
#import "parameter/value_type.hpp"
#import "predef.h"
#import "predef/architecture.h"
#import "predef/architecture/alpha.h"
#import "predef/architecture/arm.h"
#import "predef/architecture/blackfin.h"
#import "predef/architecture/convex.h"
#import "predef/architecture/ia64.h"
#import "predef/architecture/m68k.h"
#import "predef/architecture/mips.h"
#import "predef/architecture/parisc.h"
#import "predef/architecture/ppc.h"
#import "predef/architecture/pyramid.h"
#import "predef/architecture/rs6k.h"
#import "predef/architecture/sparc.h"
#import "predef/architecture/superh.h"
#import "predef/architecture/sys370.h"
#import "predef/architecture/sys390.h"
#import "predef/architecture/x86.h"
#import "predef/architecture/x86/32.h"
#import "predef/architecture/x86/64.h"
#import "predef/architecture/z.h"
#import "predef/compiler.h"
#import "predef/compiler/borland.h"
#import "predef/compiler/clang.h"
#import "predef/compiler/comeau.h"
#import "predef/compiler/compaq.h"
#import "predef/compiler/diab.h"
#import "predef/compiler/digitalmars.h"
#import "predef/compiler/dignus.h"
#import "predef/compiler/edg.h"
#import "predef/compiler/ekopath.h"
#import "predef/compiler/gcc.h"
#import "predef/compiler/gcc_xml.h"
#import "predef/compiler/greenhills.h"
#import "predef/compiler/hp_acc.h"
#import "predef/compiler/iar.h"
#import "predef/compiler/ibm.h"
#import "predef/compiler/intel.h"
#import "predef/compiler/kai.h"
#import "predef/compiler/llvm.h"
#import "predef/compiler/metaware.h"
#import "predef/compiler/metrowerks.h"
#import "predef/compiler/microtec.h"
#import "predef/compiler/mpw.h"
#import "predef/compiler/palm.h"
#import "predef/compiler/pgi.h"
#import "predef/compiler/sgi_mipspro.h"
#import "predef/compiler/sunpro.h"
#import "predef/compiler/tendra.h"
#import "predef/compiler/visualc.h"
#import "predef/compiler/watcom.h"
#import "predef/detail/comp_detected.h"
#import "predef/detail/endian_compat.h"
#import "predef/detail/os_detected.h"
#import "predef/detail/platform_detected.h"
#import "predef/detail/test.h"
#import "predef/detail/_cassert.h"
#import "predef/detail/_exception.h"
#import "predef/hardware.h"
#import "predef/hardware/simd.h"
#import "predef/hardware/simd/arm.h"
#import "predef/hardware/simd/arm/versions.h"
#import "predef/hardware/simd/ppc.h"
#import "predef/hardware/simd/ppc/versions.h"
#import "predef/hardware/simd/x86.h"
#import "predef/hardware/simd/x86/versions.h"
#import "predef/hardware/simd/x86_amd.h"
#import "predef/hardware/simd/x86_amd/versions.h"
#import "predef/language.h"
#import "predef/language/objc.h"
#import "predef/language/stdc.h"
#import "predef/language/stdcpp.h"
#import "predef/library.h"
#import "predef/library/c.h"
#import "predef/library/c/gnu.h"
#import "predef/library/c/uc.h"
#import "predef/library/c/vms.h"
#import "predef/library/c/zos.h"
#import "predef/library/c/_prefix.h"
#import "predef/library/std.h"
#import "predef/library/std/cxx.h"
#import "predef/library/std/dinkumware.h"
#import "predef/library/std/libcomo.h"
#import "predef/library/std/modena.h"
#import "predef/library/std/msl.h"
#import "predef/library/std/roguewave.h"
#import "predef/library/std/sgi.h"
#import "predef/library/std/stdcpp3.h"
#import "predef/library/std/stlport.h"
#import "predef/library/std/vacpp.h"
#import "predef/library/std/_prefix.h"
#import "predef/make.h"
#import "predef/os.h"
#import "predef/os/aix.h"
#import "predef/os/amigaos.h"
#import "predef/os/android.h"
#import "predef/os/beos.h"
#import "predef/os/bsd.h"
#import "predef/os/bsd/bsdi.h"
#import "predef/os/bsd/dragonfly.h"
#import "predef/os/bsd/free.h"
#import "predef/os/bsd/net.h"
#import "predef/os/bsd/open.h"
#import "predef/os/cygwin.h"
#import "predef/os/haiku.h"
#import "predef/os/hpux.h"
#import "predef/os/ios.h"
#import "predef/os/irix.h"
#import "predef/os/linux.h"
#import "predef/os/macos.h"
#import "predef/os/os400.h"
#import "predef/os/qnxnto.h"
#import "predef/os/solaris.h"
#import "predef/os/unix.h"
#import "predef/os/vms.h"
#import "predef/os/windows.h"
#import "predef/other.h"
#import "predef/other/endian.h"
#import "predef/platform.h"
#import "predef/platform/mingw.h"
#import "predef/platform/windows_desktop.h"
#import "predef/platform/windows_phone.h"
#import "predef/platform/windows_runtime.h"
#import "predef/platform/windows_store.h"
#import "predef/version.h"
#import "predef/version_number.h"
#import "preprocessor/arithmetic.hpp"
#import "preprocessor/arithmetic/add.hpp"
#import "preprocessor/arithmetic/dec.hpp"
#import "preprocessor/arithmetic/detail/div_base.hpp"
#import "preprocessor/arithmetic/div.hpp"
#import "preprocessor/arithmetic/inc.hpp"
#import "preprocessor/arithmetic/mod.hpp"
#import "preprocessor/arithmetic/mul.hpp"
#import "preprocessor/arithmetic/sub.hpp"
#import "preprocessor/array/data.hpp"
#import "preprocessor/array/elem.hpp"
#import "preprocessor/array/size.hpp"
#import "preprocessor/cat.hpp"
#import "preprocessor/comma_if.hpp"
#import "preprocessor/comparison/equal.hpp"
#import "preprocessor/comparison/less_equal.hpp"
#import "preprocessor/comparison/not_equal.hpp"
#import "preprocessor/config/config.hpp"
#import "preprocessor/control/deduce_d.hpp"
#import "preprocessor/control/detail/while.hpp"
#import "preprocessor/control/expr_if.hpp"
#import "preprocessor/control/expr_iif.hpp"
#import "preprocessor/control/if.hpp"
#import "preprocessor/control/iif.hpp"
#import "preprocessor/control/while.hpp"
#import "preprocessor/debug/error.hpp"
#import "preprocessor/dec.hpp"
#import "preprocessor/detail/auto_rec.hpp"
#import "preprocessor/detail/check.hpp"
#import "preprocessor/detail/dmc/auto_rec.hpp"
#import "preprocessor/detail/is_binary.hpp"
#import "preprocessor/detail/is_nullary.hpp"
#import "preprocessor/detail/is_unary.hpp"
#import "preprocessor/detail/split.hpp"
#import "preprocessor/empty.hpp"
#import "preprocessor/enum.hpp"
#import "preprocessor/enum_params.hpp"
#import "preprocessor/enum_params_with_a_default.hpp"
#import "preprocessor/enum_shifted_params.hpp"
#import "preprocessor/expr_if.hpp"
#import "preprocessor/facilities/detail/is_empty.hpp"
#import "preprocessor/facilities/empty.hpp"
#import "preprocessor/facilities/expand.hpp"
#import "preprocessor/facilities/identity.hpp"
#import "preprocessor/facilities/intercept.hpp"
#import "preprocessor/facilities/is_1.hpp"
#import "preprocessor/facilities/is_empty.hpp"
#import "preprocessor/facilities/is_empty_variadic.hpp"
#import "preprocessor/facilities/overload.hpp"
#import "preprocessor/for.hpp"
#import "preprocessor/identity.hpp"
#import "preprocessor/if.hpp"
#import "preprocessor/inc.hpp"
#import "preprocessor/iterate.hpp"
#import "preprocessor/iteration.hpp"
#import "preprocessor/iteration/detail/bounds/lower1.hpp"
#import "preprocessor/iteration/detail/bounds/lower2.hpp"
#import "preprocessor/iteration/detail/bounds/lower3.hpp"
#import "preprocessor/iteration/detail/bounds/lower4.hpp"
#import "preprocessor/iteration/detail/bounds/lower5.hpp"
#import "preprocessor/iteration/detail/bounds/upper1.hpp"
#import "preprocessor/iteration/detail/bounds/upper2.hpp"
#import "preprocessor/iteration/detail/bounds/upper3.hpp"
#import "preprocessor/iteration/detail/bounds/upper4.hpp"
#import "preprocessor/iteration/detail/bounds/upper5.hpp"
#import "preprocessor/iteration/detail/finish.hpp"
#import "preprocessor/iteration/detail/iter/forward1.hpp"
#import "preprocessor/iteration/detail/iter/forward2.hpp"
#import "preprocessor/iteration/detail/iter/forward3.hpp"
#import "preprocessor/iteration/detail/iter/forward4.hpp"
#import "preprocessor/iteration/detail/iter/forward5.hpp"
#import "preprocessor/iteration/detail/iter/reverse1.hpp"
#import "preprocessor/iteration/detail/iter/reverse2.hpp"
#import "preprocessor/iteration/detail/iter/reverse3.hpp"
#import "preprocessor/iteration/detail/iter/reverse4.hpp"
#import "preprocessor/iteration/detail/iter/reverse5.hpp"
#import "preprocessor/iteration/detail/local.hpp"
#import "preprocessor/iteration/detail/rlocal.hpp"
#import "preprocessor/iteration/detail/self.hpp"
#import "preprocessor/iteration/detail/start.hpp"
#import "preprocessor/iteration/iterate.hpp"
#import "preprocessor/iteration/local.hpp"
#import "preprocessor/iteration/self.hpp"
#import "preprocessor/list/adt.hpp"
#import "preprocessor/list/detail/fold_left.hpp"
#import "preprocessor/list/detail/fold_right.hpp"
#import "preprocessor/list/fold_left.hpp"
#import "preprocessor/list/fold_right.hpp"
#import "preprocessor/list/for_each_i.hpp"
#import "preprocessor/list/reverse.hpp"
#import "preprocessor/logical/and.hpp"
#import "preprocessor/logical/bitand.hpp"
#import "preprocessor/logical/bitor.hpp"
#import "preprocessor/logical/bool.hpp"
#import "preprocessor/logical/compl.hpp"
#import "preprocessor/logical/not.hpp"
#import "preprocessor/logical/or.hpp"
#import "preprocessor/punctuation/comma.hpp"
#import "preprocessor/punctuation/comma_if.hpp"
#import "preprocessor/punctuation/detail/is_begin_parens.hpp"
#import "preprocessor/punctuation/is_begin_parens.hpp"
#import "preprocessor/repeat.hpp"
#import "preprocessor/repeat_from_to.hpp"
#import "preprocessor/repetition.hpp"
#import "preprocessor/repetition/deduce_r.hpp"
#import "preprocessor/repetition/deduce_z.hpp"
#import "preprocessor/repetition/detail/dmc/for.hpp"
#import "preprocessor/repetition/detail/edg/for.hpp"
#import "preprocessor/repetition/detail/for.hpp"
#import "preprocessor/repetition/detail/msvc/for.hpp"
#import "preprocessor/repetition/enum.hpp"
#import "preprocessor/repetition/enum_binary_params.hpp"
#import "preprocessor/repetition/enum_params.hpp"
#import "preprocessor/repetition/enum_params_with_a_default.hpp"
#import "preprocessor/repetition/enum_params_with_defaults.hpp"
#import "preprocessor/repetition/enum_shifted.hpp"
#import "preprocessor/repetition/enum_shifted_binary_params.hpp"
#import "preprocessor/repetition/enum_shifted_params.hpp"
#import "preprocessor/repetition/enum_trailing.hpp"
#import "preprocessor/repetition/enum_trailing_binary_params.hpp"
#import "preprocessor/repetition/enum_trailing_params.hpp"
#import "preprocessor/repetition/for.hpp"
#import "preprocessor/repetition/repeat.hpp"
#import "preprocessor/repetition/repeat_from_to.hpp"
#import "preprocessor/selection/max.hpp"
#import "preprocessor/seq/cat.hpp"
#import "preprocessor/seq/detail/is_empty.hpp"
#import "preprocessor/seq/detail/split.hpp"
#import "preprocessor/seq/elem.hpp"
#import "preprocessor/seq/enum.hpp"
#import "preprocessor/seq/first_n.hpp"
#import "preprocessor/seq/fold_left.hpp"
#import "preprocessor/seq/for_each.hpp"
#import "preprocessor/seq/for_each_i.hpp"
#import "preprocessor/seq/for_each_product.hpp"
#import "preprocessor/seq/push_back.hpp"
#import "preprocessor/seq/rest_n.hpp"
#import "preprocessor/seq/seq.hpp"
#import "preprocessor/seq/size.hpp"
#import "preprocessor/seq/subseq.hpp"
#import "preprocessor/seq/transform.hpp"
#import "preprocessor/slot/detail/counter.hpp"
#import "preprocessor/slot/detail/def.hpp"
#import "preprocessor/slot/detail/shared.hpp"
#import "preprocessor/slot/detail/slot1.hpp"
#import "preprocessor/slot/detail/slot2.hpp"
#import "preprocessor/slot/detail/slot3.hpp"
#import "preprocessor/slot/detail/slot4.hpp"
#import "preprocessor/slot/detail/slot5.hpp"
#import "preprocessor/slot/slot.hpp"
#import "preprocessor/stringize.hpp"
#import "preprocessor/tuple/detail/is_single_return.hpp"
#import "preprocessor/tuple/eat.hpp"
#import "preprocessor/tuple/elem.hpp"
#import "preprocessor/tuple/rem.hpp"
#import "preprocessor/tuple/size.hpp"
#import "preprocessor/tuple/to_list.hpp"
#import "preprocessor/variadic/elem.hpp"
#import "preprocessor/variadic/size.hpp"
#import "ref.hpp"
#import "scoped_array.hpp"
#import "scoped_ptr.hpp"
#import "shared_array.hpp"
#import "shared_ptr.hpp"
#import "signals2.hpp"
#import "signals2/connection.hpp"
#import "signals2/deconstruct.hpp"
#import "signals2/deconstruct_ptr.hpp"
#import "signals2/detail/auto_buffer.hpp"
#import "signals2/detail/foreign_ptr.hpp"
#import "signals2/detail/lwm_nop.hpp"
#import "signals2/detail/lwm_pthreads.hpp"
#import "signals2/detail/lwm_win32_cs.hpp"
#import "signals2/detail/null_output_iterator.hpp"
#import "signals2/detail/preprocessed_arg_type.hpp"
#import "signals2/detail/preprocessed_arg_type_template.hpp"
#import "signals2/detail/replace_slot_function.hpp"
#import "signals2/detail/result_type_wrapper.hpp"
#import "signals2/detail/signals_common.hpp"
#import "signals2/detail/signals_common_macros.hpp"
#import "signals2/detail/signal_template.hpp"
#import "signals2/detail/slot_call_iterator.hpp"
#import "signals2/detail/slot_groups.hpp"
#import "signals2/detail/slot_template.hpp"
#import "signals2/detail/tracked_objects_visitor.hpp"
#import "signals2/detail/unique_lock.hpp"
#import "signals2/detail/variadic_arg_type.hpp"
#import "signals2/detail/variadic_slot_invoker.hpp"
#import "signals2/dummy_mutex.hpp"
#import "signals2/expired_slot.hpp"
#import "signals2/last_value.hpp"
#import "signals2/mutex.hpp"
#import "signals2/optional_last_value.hpp"
#import "signals2/postconstructible.hpp"
#import "signals2/predestructible.hpp"
#import "signals2/preprocessed_signal.hpp"
#import "signals2/preprocessed_slot.hpp"
#import "signals2/shared_connection_block.hpp"
#import "signals2/signal.hpp"
#import "signals2/signal_base.hpp"
#import "signals2/signal_type.hpp"
#import "signals2/slot.hpp"
#import "signals2/slot_base.hpp"
#import "signals2/trackable.hpp"
#import "signals2/variadic_signal.hpp"
#import "signals2/variadic_slot.hpp"
#import "smart_ptr.hpp"
#import "smart_ptr/allocate_shared_array.hpp"
#import "smart_ptr/bad_weak_ptr.hpp"
#import "smart_ptr/detail/array_allocator.hpp"
#import "smart_ptr/detail/array_count_impl.hpp"
#import "smart_ptr/detail/array_traits.hpp"
#import "smart_ptr/detail/array_utility.hpp"
#import "smart_ptr/detail/atomic_count.hpp"
#import "smart_ptr/detail/atomic_count_gcc.hpp"
#import "smart_ptr/detail/atomic_count_gcc_x86.hpp"
#import "smart_ptr/detail/atomic_count_nt.hpp"
#import "smart_ptr/detail/atomic_count_pt.hpp"
#import "smart_ptr/detail/atomic_count_solaris.hpp"
#import "smart_ptr/detail/atomic_count_spin.hpp"
#import "smart_ptr/detail/atomic_count_std_atomic.hpp"
#import "smart_ptr/detail/atomic_count_sync.hpp"
#import "smart_ptr/detail/atomic_count_win32.hpp"
#import "smart_ptr/detail/lightweight_mutex.hpp"
#import "smart_ptr/detail/lwm_nop.hpp"
#import "smart_ptr/detail/lwm_pthreads.hpp"
#import "smart_ptr/detail/lwm_win32_cs.hpp"
#import "smart_ptr/detail/operator_bool.hpp"
#import "smart_ptr/detail/quick_allocator.hpp"
#import "smart_ptr/detail/shared_count.hpp"
#import "smart_ptr/detail/spinlock.hpp"
#import "smart_ptr/detail/spinlock_gcc_arm.hpp"
#import "smart_ptr/detail/spinlock_nt.hpp"
#import "smart_ptr/detail/spinlock_pool.hpp"
#import "smart_ptr/detail/spinlock_pt.hpp"
#import "smart_ptr/detail/spinlock_std_atomic.hpp"
#import "smart_ptr/detail/spinlock_sync.hpp"
#import "smart_ptr/detail/spinlock_w32.hpp"
#import "smart_ptr/detail/sp_convertible.hpp"
#import "smart_ptr/detail/sp_counted_base.hpp"
#import "smart_ptr/detail/sp_counted_base_acc_ia64.hpp"
#import "smart_ptr/detail/sp_counted_base_aix.hpp"
#import "smart_ptr/detail/sp_counted_base_clang.hpp"
#import "smart_ptr/detail/sp_counted_base_cw_ppc.hpp"
#import "smart_ptr/detail/sp_counted_base_cw_x86.hpp"
#import "smart_ptr/detail/sp_counted_base_gcc_ia64.hpp"
#import "smart_ptr/detail/sp_counted_base_gcc_mips.hpp"
#import "smart_ptr/detail/sp_counted_base_gcc_ppc.hpp"
#import "smart_ptr/detail/sp_counted_base_gcc_sparc.hpp"
#import "smart_ptr/detail/sp_counted_base_gcc_x86.hpp"
#import "smart_ptr/detail/sp_counted_base_nt.hpp"
#import "smart_ptr/detail/sp_counted_base_pt.hpp"
#import "smart_ptr/detail/sp_counted_base_snc_ps3.hpp"
#import "smart_ptr/detail/sp_counted_base_solaris.hpp"
#import "smart_ptr/detail/sp_counted_base_spin.hpp"
#import "smart_ptr/detail/sp_counted_base_std_atomic.hpp"
#import "smart_ptr/detail/sp_counted_base_sync.hpp"
#import "smart_ptr/detail/sp_counted_base_vacpp_ppc.hpp"
#import "smart_ptr/detail/sp_counted_base_w32.hpp"
#import "smart_ptr/detail/sp_counted_impl.hpp"
#import "smart_ptr/detail/sp_disable_deprecated.hpp"
#import "smart_ptr/detail/sp_forward.hpp"
#import "smart_ptr/detail/sp_has_sync.hpp"
#import "smart_ptr/detail/sp_if_array.hpp"
#import "smart_ptr/detail/sp_interlocked.hpp"
#import "smart_ptr/detail/sp_nullptr_t.hpp"
#import "smart_ptr/detail/yield_k.hpp"
#import "smart_ptr/enable_shared_from_raw.hpp"
#import "smart_ptr/enable_shared_from_this.hpp"
#import "smart_ptr/intrusive_ptr.hpp"
#import "smart_ptr/intrusive_ref_counter.hpp"
#import "smart_ptr/make_shared.hpp"
#import "smart_ptr/make_shared_array.hpp"
#import "smart_ptr/make_shared_object.hpp"
#import "smart_ptr/make_unique.hpp"
#import "smart_ptr/owner_less.hpp"
#import "smart_ptr/scoped_array.hpp"
#import "smart_ptr/scoped_ptr.hpp"
#import "smart_ptr/shared_array.hpp"
#import "smart_ptr/shared_ptr.hpp"
#import "smart_ptr/weak_ptr.hpp"
#import "static_assert.hpp"
#import "swap.hpp"
#import "throw_exception.hpp"
#import "type.hpp"
#import "type_index.hpp"
#import "type_index/ctti_type_index.hpp"
#import "type_index/detail/compile_time_type_info.hpp"
#import "type_index/detail/ctti_register_class.hpp"
#import "type_index/detail/stl_register_class.hpp"
#import "type_index/stl_type_index.hpp"
#import "type_index/type_index_facade.hpp"
#import "type_traits/add_const.hpp"
#import "type_traits/add_cv.hpp"
#import "type_traits/add_lvalue_reference.hpp"
#import "type_traits/add_pointer.hpp"
#import "type_traits/add_reference.hpp"
#import "type_traits/add_rvalue_reference.hpp"
#import "type_traits/add_volatile.hpp"
#import "type_traits/aligned_storage.hpp"
#import "type_traits/alignment_of.hpp"
#import "type_traits/common_type.hpp"
#import "type_traits/composite_traits.hpp"
#import "type_traits/conditional.hpp"
#import "type_traits/conversion_traits.hpp"
#import "type_traits/copy_cv.hpp"
#import "type_traits/cv_traits.hpp"
#import "type_traits/decay.hpp"
#import "type_traits/declval.hpp"
#import "type_traits/detail/common_arithmetic_type.hpp"
#import "type_traits/detail/common_type_impl.hpp"
#import "type_traits/detail/composite_member_pointer_type.hpp"
#import "type_traits/detail/composite_pointer_type.hpp"
#import "type_traits/detail/config.hpp"
#import "type_traits/detail/has_binary_operator.hpp"
#import "type_traits/detail/is_function_ptr_helper.hpp"
#import "type_traits/detail/is_function_ptr_tester.hpp"
#import "type_traits/detail/is_mem_fun_pointer_impl.hpp"
#import "type_traits/detail/is_mem_fun_pointer_tester.hpp"
#import "type_traits/detail/mp_defer.hpp"
#import "type_traits/detail/yes_no_type.hpp"
#import "type_traits/function_traits.hpp"
#import "type_traits/has_left_shift.hpp"
#import "type_traits/has_minus.hpp"
#import "type_traits/has_minus_assign.hpp"
#import "type_traits/has_nothrow_assign.hpp"
#import "type_traits/has_nothrow_constructor.hpp"
#import "type_traits/has_nothrow_copy.hpp"
#import "type_traits/has_plus.hpp"
#import "type_traits/has_plus_assign.hpp"
#import "type_traits/has_right_shift.hpp"
#import "type_traits/has_trivial_assign.hpp"
#import "type_traits/has_trivial_constructor.hpp"
#import "type_traits/has_trivial_copy.hpp"
#import "type_traits/has_trivial_destructor.hpp"
#import "type_traits/has_trivial_move_assign.hpp"
#import "type_traits/has_trivial_move_constructor.hpp"
#import "type_traits/integral_constant.hpp"
#import "type_traits/integral_promotion.hpp"
#import "type_traits/intrinsics.hpp"
#import "type_traits/is_abstract.hpp"
#import "type_traits/is_arithmetic.hpp"
#import "type_traits/is_array.hpp"
#import "type_traits/is_assignable.hpp"
#import "type_traits/is_base_and_derived.hpp"
#import "type_traits/is_base_of.hpp"
#import "type_traits/is_class.hpp"
#import "type_traits/is_const.hpp"
#import "type_traits/is_constructible.hpp"
#import "type_traits/is_convertible.hpp"
#import "type_traits/is_copy_constructible.hpp"
#import "type_traits/is_default_constructible.hpp"
#import "type_traits/is_destructible.hpp"
#import "type_traits/is_empty.hpp"
#import "type_traits/is_enum.hpp"
#import "type_traits/is_float.hpp"
#import "type_traits/is_floating_point.hpp"
#import "type_traits/is_function.hpp"
#import "type_traits/is_fundamental.hpp"
#import "type_traits/is_integral.hpp"
#import "type_traits/is_lvalue_reference.hpp"
#import "type_traits/is_member_function_pointer.hpp"
#import "type_traits/is_member_pointer.hpp"
#import "type_traits/is_nothrow_move_assignable.hpp"
#import "type_traits/is_nothrow_move_constructible.hpp"
#import "type_traits/is_pod.hpp"
#import "type_traits/is_pointer.hpp"
#import "type_traits/is_polymorphic.hpp"
#import "type_traits/is_reference.hpp"
#import "type_traits/is_rvalue_reference.hpp"
#import "type_traits/is_same.hpp"
#import "type_traits/is_scalar.hpp"
#import "type_traits/is_signed.hpp"
#import "type_traits/is_stateless.hpp"
#import "type_traits/is_union.hpp"
#import "type_traits/is_unsigned.hpp"
#import "type_traits/is_void.hpp"
#import "type_traits/is_volatile.hpp"
#import "type_traits/make_signed.hpp"
#import "type_traits/make_unsigned.hpp"
#import "type_traits/remove_all_extents.hpp"
#import "type_traits/remove_bounds.hpp"
#import "type_traits/remove_const.hpp"
#import "type_traits/remove_cv.hpp"
#import "type_traits/remove_extent.hpp"
#import "type_traits/remove_pointer.hpp"
#import "type_traits/remove_reference.hpp"
#import "type_traits/remove_volatile.hpp"
#import "type_traits/type_identity.hpp"
#import "type_traits/type_with_alignment.hpp"
#import "utility/addressof.hpp"
#import "utility/base_from_member.hpp"
#import "utility/binary.hpp"
#import "utility/compare_pointees.hpp"
#import "utility/declval.hpp"
#import "utility/detail/result_of_iterate.hpp"
#import "utility/enable_if.hpp"
#import "utility/explicit_operator_bool.hpp"
#import "utility/identity_type.hpp"
#import "utility/result_of.hpp"
#import "utility/swap.hpp"
#import "variant/apply_visitor.hpp"
#import "variant/detail/apply_visitor_binary.hpp"
#import "variant/detail/apply_visitor_delayed.hpp"
#import "variant/detail/apply_visitor_unary.hpp"
#import "variant/detail/backup_holder.hpp"
#import "variant/detail/cast_storage.hpp"
#import "variant/detail/config.hpp"
#import "variant/detail/enable_recursive_fwd.hpp"
#import "variant/detail/forced_return.hpp"
#import "variant/detail/generic_result_type.hpp"
#import "variant/detail/hash_variant.hpp"
#import "variant/detail/has_result_type.hpp"
#import "variant/detail/initializer.hpp"
#import "variant/detail/make_variant_list.hpp"
#import "variant/detail/move.hpp"
#import "variant/detail/over_sequence.hpp"
#import "variant/detail/substitute_fwd.hpp"
#import "variant/detail/variant_io.hpp"
#import "variant/detail/visitation_impl.hpp"
#import "variant/recursive_wrapper_fwd.hpp"
#import "variant/static_visitor.hpp"
#import "variant/variant.hpp"
#import "variant/variant_fwd.hpp"
#import "version.hpp"
#import "visit_each.hpp"
#import "weak_ptr.hpp"

FOUNDATION_EXPORT double boostVersionNumber;
FOUNDATION_EXPORT const unsigned char boostVersionString[];

